/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8/userguide/java_library_plugin.html
 */

//import static org.gradle.util.CollectionUtils.single

ext.jnaVersion = '4.5.2'
ext.libraryName = 'mongodb-embedded-capi'
ext.pomName = 'MongoDB Embedded Driver C API'
ext.pomDescription = 'The MongoDB Embedded Driver Native'
ext.pomUrl = 'http://www.mongodb.org'
ext.pomLicenseName = 'The Apache License, Version 2.0'
ext.pomLicenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
ext.pomScmConnection = 'scm:https://github.com/mongodb/mongo.git'
ext.pomScmDevConnection = 'scm:git@github.com:mongodb/mongo.git'
ext.pomScmUrl = 'https://github.com/mongodb/mongo'

buildscript {
    repositories {
        //maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        jcenter()
        mavenCentral()
        google()
        //maven { url "https://plugins.gradle.org/m2/" }
        //mavenLocal()
    }
    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'
        classpath 'com.android.tools.build:gradle:3.1.2'
        //classpath 'com.bmuschko:gradle-nexus-plugin:2.2'
        classpath 'digital.wup:android-maven-publish:3.6.2'
    }
}

def getGitVersion() {
    if (project.findProperty("versionOverride")) {
        return versionOverride
    } else {
        def outputAsString

        new ByteArrayOutputStream().withStream { os ->
            def result = exec {
                executable 'git'
                args 'describe', '--tags', '--always', '--dirty'
                standardOutput = os
            }
            outputAsString = os.toString().substring(1).trim()
        }

        return outputAsString
    }
}

allprojects {
    group = 'com.mongodb'
    version = getGitVersion()

    repositories {
        google()
        jcenter()
        //mavenLocal()
    }
}
