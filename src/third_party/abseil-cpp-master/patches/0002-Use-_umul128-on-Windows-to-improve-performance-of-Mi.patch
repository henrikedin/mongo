From b644d229093dfec65ec95ba39a4f74c5482f91d2 Mon Sep 17 00:00:00 2001
From: Henrik Edin <henrik.edin@mongodb.com>
Date: Thu, 8 Nov 2018 18:32:09 -0500
Subject: [PATCH 2/2] Use _umul128 on Windows to improve performance of Mix()
 on MSVC.

---
 absl/hash/internal/hash.h | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/absl/hash/internal/hash.h b/absl/hash/internal/hash.h
index b66cc1b..4611622 100644
--- a/absl/hash/internal/hash.h
+++ b/absl/hash/internal/hash.h
@@ -775,6 +775,9 @@ class CityHashState : public HashStateBase<CityHashState> {
   ABSL_ATTRIBUTE_ALWAYS_INLINE static uint64_t Mix(uint64_t state, uint64_t v) {
     using MultType =
         absl::conditional_t<sizeof(size_t) == 4, uint64_t, uint128>;
+#if !defined(_MSC_VER) || !defined(_WIN64)
+    using MultType =
+        absl::conditional_t<sizeof(size_t) == 4, uint64_t, uint128>;
     // We do the addition in 64-bit space to make sure the 128-bit
     // multiplication is fast. If we were to do it as MultType the compiler has
     // to assume that the high word is non-zero and needs to perform 2
@@ -782,6 +785,11 @@ class CityHashState : public HashStateBase<CityHashState> {
     MultType m = state + v;
     m *= kMul;
     return static_cast<uint64_t>(m ^ (m >> (sizeof(m) * 8 / 2)));
+#else
+    uint64_t high;
+    uint64_t low = _umul128(state + v, kMul, &high);
+    return low ^ high;
+#endif
   }
 
   // Seed()
-- 
2.10.1.windows.1

